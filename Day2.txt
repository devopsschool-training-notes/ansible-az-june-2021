What is the PRB?
============================
ansible web -i inventory -m yum -a "name=httpd state=installed" -u centos --key-file=node.pem -b
ansible web -i inventory -m copy -a "src=index.html dest=/var/www/html/index.html"  -u centos --key-file=node.pem -b
ansible web -i inventory -m service -a "name=httpd state=started"  -u centos --key-file=node.pem -b
ansible web -i inventory -m yum -a "name=httpd state=installed" -u centos --key-file=node.pem -b
ansible web -i inventory -m copy -a "src=index.html dest=/var/www/html/index.html"  -u centos --key-file=node.pem -b
ansible web -i inventory -m service -a "name=httpd state=started"  -u centos --key-file=node.pem -b
ansible web -i inventory -m yum -a "name=httpd state=installed" -u centos --key-file=node.pem -b
ansible web -i inventory -m copy -a "src=index.html dest=/var/www/html/index.html"  -u centos --key-file=node.pem -b
ansible web -i inventory -m service -a "name=httpd state=started"  -u centos --key-file=node.pem -b
ansible web -i inventory -m yum -a "name=httpd state=installed" -u centos --key-file=node.pem -b
ansible web -i inventory -m copy -a "src=index.html dest=/var/www/html/index.html"  -u centos --key-file=node.pem -b
ansible web -i inventory -m service -a "name=httpd state=started"  -u centos --key-file=node.pem -bansible
ansible web -i inventory -m yum -a "name=httpd state=installed" -u centos --key-file=node.pem -b
ansible web -i inventory -m copy -a "src=index.html dest=/var/www/html/index.html"  -u centos --key-file=node.pem -b
ansible web -i inventory -m service -a "name=httpd state=started"  -u centos --key-file=node.pem -b
ansible web -i inventory -m yum -a "name=httpd state=installed" -u centos --key-file=node.pem -b
ansible web -i inventory -m copy -a "src=index.html dest=/var/www/html/index.html"  -u centos --key-file=node.pem -b
ansible web -i inventory -m service -a "name=httpd state=started"  -u centos --key-file=node.pem -b
ansible web -i inventory -m yum -a "name=httpd state=installed" -u centos --key-file=node.pem -b
ansible web -i inventory -m copy -a "src=index.html dest=/var/www/html/index.html"  -u centos --key-file=node.pem -b
ansible web -i inventory -m service -a "name=httpd state=started"  -u centos --key-file=node.pem -b
ansible web -i inventory -m yum -a "name=httpd state=installed" -u centos --key-file=node.pem -b
ansible web -i inventory -m copy -a "src=index.html dest=/var/www/html/index.html"  -u centos --key-file=node.pem -b
ansible web -i inventory -m service -a "name=httpd state=started"  -u centos --key-file=node.pem -b
ansible web -i inventory -m yum -a "name=httpd state=installed" -u centos --key-file=node.pem -b
ansible web -i inventory -m copy -a "src=index.html dest=/var/www/html/index.html"  -u centos --key-file=node.pem -b
ansible web -i inventory -m service -a "name=httpd state=started"  -u centos --key-file=node.pem -b

SHELL SCRIPT
 - variables
 - conditioning 
 - looping
 - template config work
 - Handlers
 ========================================================================
 
 Solution - Playbook
 ------------------------------------------
 What is Playbook?
 - YAML FILE
 - Collection of PLAY
 
 What is PLAY?
 
 Hosts: all OR <Custom Group>
 Tasks: List of Module with its param
		- module & param
		- module & param
		- module & param
		- module & param
 -----------------PLAYBOOK---------------------------
 
 Hosts: all OR <Custom Group>
 Tasks: List of Module with its param
		- module & param
		- module & param
		- module & param
		- module & param
		
 Hosts: all OR <Custom Group>
 Tasks: List of Module with its param
		- module & param
		- module & param
		- module & param
		- module & param 
		
 Hosts: all OR <Custom Group>
 Tasks: List of Module with its param
		- module & param
		- module & param
		- module & param
		- module & param

 Hosts: all OR <Custom Group>
 Tasks: List of Module with its param
		- module & param
		- module & param
		- module & param
		- module & param		
 =============================================================
ansible web -i inventory -m yum -a "name=httpd state=installed" -u centos --key-file=node.pem -b
ansible web -i inventory -m copy -a "src=index.html dest=/var/www/html/index.html"  -u centos --key-file=node.pem -b
ansible web -i inventory -m service -a "name=httpd state=started"  -u centos --key-file=node.pem -b
 
 ---
  Hosts: all OR <Custom Group>
 Tasks: List of Module with its param
		- module & param
		- module & param
		- module & param
		- module & param
...

---		
 Hosts: all OR <Custom Group>
 Tasks: List of Module with its param
		- module & param
		- module & param
		- module & param
		- module & param
 ...
 
 
 ==========================================================
 
---
- name: Update web servers
  hosts: web

  tasks:
  - name: Install Apache in centos7
    ansible.builtin.yum:
      name: httpd
      state: latest
  - name: Copy index.html
    ansible.builtin.copy:
      src: index.html
      dest: /var/www/html/index.html
  - name: Starting a Apache Server
    ansible.builtin.service:
      name: httpd
      state: started  
 
Basic workflow of PLAYBOOK---------------------------====
==================================================
Step 1- Write a Yaml file

Step 2 - Check a Syntax 

[azureuser@master rajesh]$ ansible-playbook --syntax-check web.yaml
[WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match
'all'
[WARNING]: Could not match supplied host pattern, ignoring: web

playbook: web.yaml
[azureuser@master rajesh]$ ansible-playbook --syntax-check web.yaml -i inventory

playbook: web.yaml
[azureuser@master rajesh]$


Step 3 - DRY run
ansible-playbook -C web.yaml -i inventory -u azureuser -k -b

Step 4 - run 
ansible-playbook web.yaml -i inventory -u azureuser -k -b 
ansible-playbook localhost web.yaml 
 
 
 
 
Assignment 
- https://www.devopsschool.com/blog/ansible-playbook-lab-excercise-part-2/
 
======================================================================================
======================================================================================
https://devopsschool.com/tutorial/ansible/variables/index.html

Ansible Variables
======================
What is Variable?
- a pointer to value

Where to declare variables in Ansible?
---------------------------------------
22 PLACES
-----------------------
Ansible Variable in Playbook with following ways:
 
	- Use variables in playbook directly
	- Use variables using external var files in playbook
	- Use variables using include_vars into task in playbook
	- Use variables using User Prompt in playbook
	- Use variables using outout of task using register
	
Inventory
========================
- Behavioural Param
- Vars in inventory file

- variable using Host Var
	
- variable using Group Var
	
Tools(ansible, ansible-playbook)
=======================================
Command Line 
  -e EXTRA_VARS, --extra-vars EXTRA_VARS
                        set additional variables as key=value or YAML/JSON, if
                        filename prepend with @


ansible-playbook var1.yaml -i inventory -e mynameinv=ramukaka
ansible-playbook var1.yaml -i inventory -e @last.yaml

========================================
---
- name: Update web servers
  hosts: web
  vars:
    myname: "Rajeshkumar"
    age: "18"
    packagename: "httpd"
	servicename: "httpd"

  tasks:
  - name: Install Apache in centos7
    ansible.builtin.yum:
      name={{ packagename }}
      state: latest
  - name: Copy index.html
    ansible.builtin.copy:
      src: index.html
      dest: /var/www/html/index.html
  - name: Starting a Apache Server
    ansible.builtin.service:
      name={{ servicename }}
      state: started
  - name: Print return information from the previous task
    ansible.builtin.debug:
      var: myname
  - name: Print return information from the previous task
    ansible.builtin.debug:
      msg: "My Name is {{ myname }} and My age is {{ age }}"

=============================================



---
- name: Update web servers
  hosts: web
  vars:
    myname: "Rajeshkumar"
    age: "18"
    packagename: "httpd"
    servicename: "httpd"
  vars_files:
    - "vars.yaml"

  tasks:
  - name: Install Apache in centos7
    ansible.builtin.yum:
      name: "{{ packagename }}"
      state: latest
  - name: Copy index.html
    ansible.builtin.copy:
      src: index.html
      dest: /var/www/html/index.html
  - name: Starting a Apache Server
    ansible.builtin.service:
      name: "{{ servicename }}"
      state: started
  - name: Print return information from the previous task
    ansible.builtin.debug:
      var: myname
  - name: include default step variables
    include_vars: tasks_var.yaml
  - name: Print return information from the previous task
    ansible.builtin.debug:
      msg: "My Name is {{ myname }} and My age is {{ age }}"




 vars_prompt:
    - name: "myname"
      prompt: "Which version Do you want to install?"



  - name: Ansible register variable basic example
    shell: "find *.txt"
    args:
      chdir: "/home/azureuser/rajesh"
    register: find_output

  - debug:
      var: find_output



---
- name: Update web servers
  hosts: web
  vars:
    myname: "Rajeshkumar"
    age: "18"
    packagename: "httpd"
    servicename: "httpd"
  vars_files:
    - "vars.yaml"
  vars_prompt:
    - name: "version"
      prompt: "Which version Do you want to install?"
      private: no

  tasks:
  - name: Install Apache in centos7
    ansible.builtin.yum:
      name: "{{ packagename }}"
      state: latest
  - name: Copy index.html
    ansible.builtin.copy:
      src: index.html
      dest: /var/www/html/index.html
  - name: Starting a Apache Server
    ansible.builtin.service:
      name: "{{ servicename }}"
      state: started
  - name: Print return information from the previous task
    ansible.builtin.debug:
      var: myname
  - name: include default step variables
    include_vars: tasks_var.yaml
  - name: Print return information from the previous task
    ansible.builtin.debug:
      msg: "My Name is {{ myname }} and My age is {{ age }}"
  - name: Print return information from the previous task
    ansible.builtin.debug:
      var: version
  - name: Ansible register variable basic example
    shell: "find *.txt"
    args:
      chdir: "/home/azureuser/rajesh"
    register: find_output
  - debug:
      var: find_output
  - debug:
      var: find_output.stdout_lines
  - debug:
      var: find_output.stdout_lines[0]



https://www.devopsschool.com/blog/ansible-variable-lab-excercise-part-1/
- Assigment 2 
- Assigment 3

https://www.devopsschool.com/blog/ansible-variable-lab-excercise-part-2/
- Assigment 2
- Assigment 3


inventory
=====================================

[web]			user & passowd & sudo without password
1.2.3.4
1.2.3.5
1.2.3.6
1.2.3.7

[app]			user & key & sudo with password
2.2.3.4
3.2.3.5
4.2.3.6
5.2.3.7


[log]			user & key & sudo with Diff user and password
6.2.3.4
7.2.3.5
8.2.3.6
9.2.3.7

[db]			user & pass & sudo with Diff user and key
6.2.3.1
7.2.3.2
8.2.3.3
9.2.3.4

=====================================
[web]			user & passowd & sudo without password
1.2.3.4		ansible_user=user1 ansible_ssh_pass=pass1 ansible_become=yes
1.2.3.5		ansible_user=user2 ansible_ssh_pass=pass2 ansible_become=yes
1.2.3.6		ansible_user=user3 ansible_ssh_pass=pass3 ansible_become=yes
1.2.3.7

[app]			user & key & sudo with password
2.2.3.4			ansible_user=user1 ansible_ssh_private_key_file=node.pem ansible_become=yes ansible_become_pass=pass123
3.2.3.5		ansible_user=user2 ansible_ssh_private_key_file=node.pem ansible_become=yes ansible_become_pass=pass123
4.2.3.6
5.2.3.7


[log]			user & key & sudo with Diff user and password
6.2.3.4			ansible_user=user1 ansible_ssh_private_key_file=node.pem ansible_become=yes ansible_become_user=user2 ansible_become_pass=pas122
7.2.3.5
8.2.3.6
9.2.3.7

[db]			user & pass & sudo with Diff user and password
6.2.3.1		ansible_user=user1 ansible_ssh_pass=pass1 ansible_become=yes ansible_become_user=user2 ansible_become_pass=pass2
7.2.3.2
8.2.3.3
9.2.3.4


some_host         ansible_port=2222     ansible_user=manager
aws_host          ansible_ssh_private_key_file=/home/example/.ssh/aws.pem
freebsd_host      ansible_python_interpreter=/usr/local/bin/python
ruby_module_host  ansible_ruby_interpreter=/usr/bin/ruby.1.9.3

=============================================================================================
=====================================
[web]			user & passowd & sudo without password
1.2.3.4		
1.2.3.5		
1.2.3.6		
1.2.3.7

[web:vars]
ansible_user=user1 
ansible_ssh_pass=pass1 
ansible_become=yes


[app]			user & key & sudo with password
2.2.3.4			
3.2.3.5		
4.2.3.6
5.2.3.7

[app:vars]
ansible_user=user1 
ansible_ssh_private_key_file=node.pem 
ansible_become=yes 
ansible_become_pass=pass123



[log]			user & key & sudo with Diff user and password
6.2.3.4			ansible_user=user1 ansible_ssh_private_key_file=node.pem ansible_become=yes ansible_become_user=user2 ansible_become_pass=pas122
7.2.3.5
8.2.3.6
9.2.3.7

[db]			user & pass & sudo with Diff user and password
6.2.3.1		ansible_user=user1 ansible_ssh_pass=pass1 ansible_become=yes ansible_become_user=user2 ansible_become_pass=pass2
7.2.3.2
8.2.3.3
9.2.3.4





 
 
